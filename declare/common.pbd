Declare ensureSplashNotOnTop()
Declare.s formatDateAsDDMMMYYYY(pDate)
Declare.s decodeLicType(pLicType.s, dExpDate)
Declare.f convertDBLevelToBVLevel(fDBLevel.f, nRemDevMsgType=0)
Declare.f convertBVLevelToDBLevel(fBVLevel.f)
Declare.s convertBVLevelToDBString(fBVLevel.f, bRelativeLevel=#False, bAddPlusForGtZero=#True, nRemDevMsgType=0)
Declare.s convertBVLevelToDBStringWithMinusInf(fBVLevel.f, bAddPlusForGtZero=#True)
Declare.f convertDBStringToBVLevel(sDBString.s, nRemDevMsgType=0)
Declare.f convertDBStringToDBLevel(sDBString.s, nRemDevMsgType=0)
Declare.s convertDBLevelToDBString(fDBLevel.f)
Declare.f dbTrimStringToFactor(pdBString.s)
Declare.f dbTrimStringToSingle(pdBString.s)
Declare dbStringToMixerLevel(pdBString.s)
Declare.s decToHex2(pDec)
Declare decodeExpString(sExpString.s, *nExpFactor.Long)
Declare.s encodeExpString(dExpDate, *nExpFactor.Long)
Declare.s decodeSubTypeL(pSubType.s, pSubPtr)
Declare.s decode2ndSubType(pSubType.s, pSubPtr)
Declare.s getCueActivationMethodForDisplay(pCuePtr)
Declare.s getCueActivationMethodForTemplate(*rTmCue.tyTmCue)
Declare encodeAutoActCueSelType(sAutoActCueSelType.s)
Declare.s decodeAutoActCueSelType(nAutoActCueSelType)
Declare.s decodeDriver(nDriver)
Declare.s decodeDriverL(nDriver, bShort=#False)
Declare encodeAudioDriver(sDriver.s)
Declare.s decodeDevGrp(nDevGrp)
Declare.s decodeDevGrpL(nDevGrp)
Declare.s decodeDevType(nDevType)
Declare.s decodeDevTypeL(nDevType)
Declare encodeDevType(sDevType.s)
Declare encodeDevGrp(sDevGrp.s)
Declare.s decodeDevState(nDevState)
Declare.s decodeDriveType(nDriveType)
Declare.s decodeDriveTypeL(nDriveType)
Declare encodeHideCueOpt(sHideCueOpt.s)
Declare.s decodeHideCueOpt(nHideCueOpt)
Declare.s decodeHideCueOptL(nHideCueOpt)
Declare encodeMonitorSize(sMonitorSize.s)
Declare.s decodeMonitorSize(nMonitorSize)
Declare.s decodeMonitorSizeL(nMonitorSize)
Declare.s decodeFlip(nFlip)
Declare encodeFlip(sFlip.s)
Declare.s decodeLostFocusAction(nLostFocusAction)
Declare.s decodeLostFocusActionL(nLostFocusAction)
Declare encodeLostFocusAction(sLostFocusAction.s)
Declare encodeMTCDispLocn(sMTCDispLocn.s)
Declare.s decodeMTCDispLocn(nMTCDispLocn)
Declare.s decodeMTCDispLocnL(nMTCDispLocn)
Declare encodeTimerDispLocn(sTimerDispLocn.s)
Declare.s decodeTimerDispLocn(nTimerDispLocn)
Declare.s decodeTimerDispLocnL(nTimerDispLocn)
Declare.s getTypeForColIndex(nGridType, nColIndex)
Declare getIndexForColType(nGridType, sColType.s)
Declare.s decodeMSCCommand(pCommand)
Declare.s decodeCueState(pCueState, bLiveInput=#False)
Declare.s decodeCueStateL(nCueState, bLiveInput=#False)
Declare getCueStateForDisplayEtc(pCuePtr)
Declare.s getCueStateForGrid(pCuePtr)
Declare.s decodeProdTimerAction(nProdTimerAction)
Declare.s decodeProdTimerActionL(nProdTimerAction)
Declare.s decodeProdTimerActionAbbr(nProdTimerAction)
Declare encodeProdTimerAction(sProdTimerAction.s)
Declare.s decodeProdTimerHistAction(nHistAction)
Declare.s decodeProdTimerHistActionL(nHistAction)
Declare.s decodeSubStart(nSubStart)
Declare.s decodeSubStartL(nSubStart)
Declare encodeSubStart(sSubStart.s)
Declare.s decodeRelStartMode(nRelStartMode)
Declare encodeRelStartMode(sRelStartMode.s)
Declare.s decodeRemCmd(nRemCmd, p1.s="")
Declare.s decodeRemCmdL(nRemCmd, p1.s="")
Declare.s decodeSFRAction(nSFRAction)
Declare encodeSFRAction(sSFRAction.s)
Declare.s decodeSFRCueType(nSFRCueType)
Declare encodeSFRCueType(sSFRCueType.s)
Declare.s decodeLCCueType(nLCCueType)
Declare encodeLCCueType(sLCCueType.s)
Declare.s decodeLCAction(nLCAction)
Declare encodeLCAction(sLCAction.s)
Declare.s decodeAFAction(nAFAction)
Declare encodeAFAction(sAFAction.s)
Declare.s decodeChangeCode(nChangeCode)
Declare encodeVisMode(sVisMode.s)
Declare.s decodeVisMode(nVisMode)
Declare.s decodeVisModeL(nVisMode)
Declare.s getDevTypeDesc(nDevType)
Declare setLabels(pCuePtr)
Declare set2ndLabels(pCuePtr)
Declare.s calcProdId()
Declare indexForCtrlMethod(pCtrlMethod.s)
Declare compactLabel(hField, sValue.s, nMinLength=20)
Declare.s compactTextForCanvas(sText.s, nMaxWidth)
Declare displayHelpContents()
Declare displayHelpTopic(pTopicFile.s)
Declare.s decodeController(nController)
Declare.s decodeControllerL(nController)
Declare encodeController(sController.s)
Declare.s decodeCtrlConfig(nCtrlConfig)
Declare.s decodeCtrlConfigL(nCtrlConfig)
Declare encodeCtrlConfig(sCtrlConfig.s)
Declare.s decodeFaderAssignments(nFaderAssignments)
Declare encodeFaderAssignments(sFaderAssignments.s)
Declare.s decodeCtrlItemType(nCtrlItemType)
Declare encodeCtrlItemType(sCtrlItemType.s)
Declare getMsgType(nMSMsgType, nRemDevMsgType)
Declare.s decodeMsgType(nMsgType)
Declare.s decodeMsgTypeL(nMsgType)
Declare.s decodeMsgTypeShortL(nMsgType, nAction=#False)
Declare encodeMSMsgType(sMsgType.s)
Declare.s decodeCtrlMethod(nCtrlMethod)
Declare.s decodeCtrlMethodL(nCtrlMethod)
Declare encodeCtrlMethod(sCtrlMethod.s)
Declare.s decodeCtrlCommandL(nCtrlCommand, sPar1.s="")
Declare.s decodeMidiCommand(nMidiCommand)
Declare encodeMidiCommand(sMidiCommand.s, *rProd.tyProd)
Declare.s decodeX32Command(nX32Command)
Declare encodeX32Command(sX32Command.s)
Declare.s decodeYesNoL(nYesNo)
Declare.s decodeMemoDispOptForPrim(nMemoDispOptForPrim)
Declare.s decodeMemoDispOptForPrimL(nMemoDispOptForPrim)
Declare encodeMemoDispOptForPrim(sMemoDispOptForPrim.s)
Declare getAbsTime(pAudPtr, pField.s, pLoopInfoIndex=0, bPrimaryFile=#True)
Declare getCuePtr(sCue.s)
Declare getCuePtr2(sCue.s)
Declare getAudPtrForAudNo(nSubPtr, nAudNo)
Declare.s getErrorInfo()
Declare getGridHeaderHeight(nGadgetNo)
Declare getGridRowHeight(nGadgetNo)
Declare resizeGridForRows(nGadgetNo, nRows, nMaxHeight, nTop=-9999)
Declare getGridRowInfo(nGadgetNo)
Declare getSubPtrForSubRef(pSubRef)
Declare getSubPtrForCueSubNo(pCuePtr, pSubNo)
Declare hexToDec(pHex.s)
Declare.s hexStringToString(pHexString.s)
Declare hexStringToBuffer(pHexString.s, *pBuffer, pMaxLen)
Declare.s bufferToHexString(*pBuffer, pBufLen, pSeparator.s="")
Declare.s bufferToAsciiString(*pBuffer, pBufLen)
Declare.s bufferToUTF8String(*pBuffer, pBufLen)
Declare.s hex2(aByte.a)
Declare.s hex6(nNumber)
Declare.s revStr(pString.s)
Declare icu(sUN.s, sAS.s)
Declare.s panSingleToString(nPanSingle.f)
Declare panToSliderValue(nPanSingle.f)
Declare.f panSliderValToSingle(nPan)
Declare.s traceLevel(fBVLevel.f)
Declare.s traceLevel2(fBVLevel.f, fMinBVLevel.f, fMaxBVLevel.f)
Declare.s tracePan(fPan.f)
Declare.s intToStrBWZ(nValue)
Declare.s portIntToStr(nPort)
Declare portStrToInt(sPort.s)
Declare MsgBoxOrValMsg(sPrompt.s, nFlags=#PB_MessageRequester_Ok, sTitle.s="")
Declare getMouseCursor()
Declare setMouseCursor(nCursorType)
Declare setMouseCursorBusy()
Declare setMouseCursorNormal()
Declare selectWholeField(hTxtField)
Declare setFileSave(bSkipEditorProcessing=#False)
Declare validateCBOField(hComboBox, pPrompt.s)
Declare validateNumberField(pField.s)
Declare validateTimeField(pField.s, pPrompt.s, pStartOk, pEndOk, pRefTime=0, bZeroOK=#False, bThousandths=#False, bTenths=#False, bRelative=#False, bNegativeOK=#False)
Declare validateTimeFieldT(pField.s, pPrompt.s, pStartOk, pEndOk, pRefTime=0, bZeroOK=#False, bRelative=#False, bNegativeOK=#False)
Declare validateTimeFieldD(pField.s, pPrompt.s, pStartOk, pEndOk, pRefTime=0, bZeroOK=#False, bRelative=#False, bNegativeOK=#False)
Declare validateDbChangeField(pField.s, pPrompt.s)
Declare validateDbIncrementField(pField.s, pPrompt.s)
Declare validateDbField(pField.s, pPrompt.s, bQuiet=#False, bMinusInfOk=#True, nRemDevMsgType=0)
Declare.f panStringToSingle(sPanString.s)
Declare validatePanTextField(pField.s, pPrompt.s)
Declare validateTODField(pField.s, pPrompt.s)
Declare unpackGridLayoutString(*pGridInfo.tyGridInfo, nGridType)
Declare updateGridInfoFromPhysicalLayout(*pGridInfo.tyGridInfo)
Declare encodeFadeType(sFadeType.s)
Declare.s decodeFadeType(nFadeType)
Declare.s decodeFadeTypeL(nFadeType)
Declare.s decodeFadeEntryType(nFadeEntryType)
Declare encodeFadeEntryType(sFadeEntryType.s)
Declare.s decodeFadeFieldType(nFadeFieldType)
Declare.s decodeFileState(nFileState)
Declare encodeFileSelector(sFileSelector.s)
Declare.s decodeFileSelector(nFileSelector)
Declare encodeSetPosAbsRel(sAbsRel.s)
Declare.s decodeSetPosAbsRel(nAbsRel)
Declare encodeSetPosSetPosCueType(sSetPosCueType.s)
Declare.s decodeSetPosSetPosCueType(nSetPosCueType)
Declare encodeActivationMethod(sActivationMethod.s)
Declare.s decodeActivationMethod(nActivationMethod)
Declare.s decodeActivationMethodL(nActivationMethod)
Declare encodeAutoActPosn(sAutoActPosn.s)
Declare.s decodeAutoActPosn(nAutoActPosn)
Declare.s decodeStandby(nStandby)
Declare.s decodeStandbyL(nStandby)
Declare encodeStandby(sStandby.s)
Declare getGrdCuesRedrawState()
Declare setGrdCuesRedrawState(bRedrawState)
Declare.l JustifyListIconColumn(GadgetID.l,column.l,flag.l)    ;Justify ListIcon Column. flag: 0=Left 1=Right 2=Center
Declare setCboToolTipAtSelectedText(nGadgetNo)
Declare.f convertSizeToPercentage(nSize)
Declare calcDisplayPosAndSize3(pAudPtr, pSourceWidth, pSourceHeight, pTargetWidth, pTargetHeight, pTarget2Width, pTarget2Height, bAllowCropping=#True, bApplyAspectRatio=#False)
Declare encodeVideoRenderer(sVideoRenderer.s, nVideoPlaybackLibrary=#SCS_VPL_TVG)
Declare.s decodeVideoRenderer(nVideoRenderer, nVideoPlaybackLibrary=#SCS_VPL_TVG)
Declare.s decodeVideoRendererL(nVideoRenderer, nVideoPlaybackLibrary=#SCS_VPL_TVG)
Declare.s decodeVideoRendererWithDefault(nVideoRenderer, nVideoPlaybackLibrary=#SCS_VPL_TVG)
Declare.s decodeVideoSource(nVideoSource)
Declare encodeVideoSource(sVideoSource.s)
Declare.s decodeLevelPointType(nPointType)
Declare.s decodeLevelPointTypeL(nPointType)
Declare encodeLevelPointType(sPointType.s)
Declare.s decodeLvlPtLvlSel(nLvlPtLvlSel)
Declare.s decodeLvlPtLvlSelL(nLvlPtLvlSel)
Declare encodeLvlPtLvlSel(sLvlPtLvlSel.s)
Declare.s decodeLvlPtPanSel(nLvlPtPanSel)
Declare.s decodeLvlPtPanSelL(nLvlPtPanSel)
Declare encodeLvlPtPanSel(sLvlPtPanSel.s)
Declare.s decodeOperMode(nOperMode)
Declare.s decodeOperModeL(nOperMode)
Declare encodeOperMode(sOperMode.s)
Declare AbsInt(pValue)
Declare drawResizeHandle(nColor)
Declare.s dropIllegalFilenameChars(sFileName.s)
Declare encodeMuteAction(sMuteAction.s)
Declare.s decodeMuteAction(nMuteAction)
Declare.s decodeMuteActionL(nMuteAction)
Declare encodeMTCType(sMTCType.s)
Declare.s decodeMTCType(nMTCType)
Declare.s decodeMTCTypeL(nMTCType)
Declare encodeLTEntryType(sLTEntryType.s)
Declare.s decodeLTEntryType(nLTEntryType)
Declare.s decodeLTEntryTypeL(nLTEntryType)
Declare TogglePasswordVisibility(StringGadgetID.I)
Declare drawPasswordEye(cvsPasswordEyeGadget)
Declare processPasswordEyeEvent(txtGadget)
Declare processSplitterRepositioned(nSplitterMoving, bEndOfMove=#False)
Declare BlendColor(Color1, Color2, Scale=50)
Declare lightenRGBColor(nCurrColor, nLightenFactor=-1)
Declare.s checkForUpdateIfReqd(bForceCheck=#False)
Declare getShortcutForKey(sKey.s)
Declare.s decodeTouchPanelPos(nTouchPanelPos)
Declare encodeTouchPanelPos(sTouchPanelPos.s)
Declare.s decodeFTStatus(ftStatus.l)
Declare.s decodeDMXAPILabel(nLabel.a)
Declare.s decodeDMXMode(nDMXMode)
Declare.s decodeDMXPref(nPref)
Declare encodeDMXPref(sPref.s)
Declare.s decodeDMXGridType(nGridType)
Declare encodeDMXGridType(sGridType.s)
Declare.s decodeDMXTrgCtrl(nTrgCtrl)
Declare encodeDMXTrgCtrl(sTrgCtrl.s)
Declare.s decodeDMXCommand(nDMXCommand)   ; was DMXCmdAbbrForCmdNo()
Declare.s decodeDMXCommandL(nDMXCommand)
Declare encodeDMXCommand(sDMXCommand.s)  ; was DMXCmdNoForCmdAbbr()
Declare.s decodeDMXDevType(nDMXDevType)
Declare.s decodeDMXFadeActionFI(nFadeActionFI)
Declare encodeDMXFadeActionFI(sFadeActionFI.s)
Declare.s decodeDMXFadeActionBL(nFadeActionBL)
Declare encodeDMXFadeActionBL(sFadeActionBL.s)
Declare.s decodeDMXFadeActionDI(nFadeActionDI)
Declare encodeDMXFadeActionDI(sFadeActionDI.s)
Declare.s decodeDMXFadeActionDC(nFadeActionDC)
Declare encodeDMXFadeActionDC(sFadeActionDC.s)
Declare.s decodeDMXChaseMode(nChaseMode)
Declare encodeDMXChaseMode(sChaseMode.s)
Declare.s decodeOSCVersionL(nOSCVersion)
Declare.s decodeOSCVersion(nOSCVersion)
Declare encodeOSCVersion(sOSCVersion.s)
