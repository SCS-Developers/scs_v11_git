Declare calcCuePositionForAud(pAudPtr)
Declare calcPLPosition(pSubPtr)
Declare calcPLTotalTime(pSubPtr)
Declare calcPLUnplayedFilesTime(pSubPtr)
Declare calcPLTimeToGo(pSubPtr)
Declare casAddRequest()
Declare casInit()
Declare casNewGroup()
Declare casProcess()
Declare casReadyGroup(nGroupId)
Declare checkCueToGoForWarning()
Declare checkExclusiveCuePlaying()
Declare ErrorHandler(pProcName.s, pErr.s, pInfo.s = "", bFatal = #True)
Declare checkMaxAud(nAudPtr)
Declare checkMaxCue(nCuePtr)
Declare checkMaxSub(nSubPtr, bPrimaryFile=#True)
Declare closeDown(pCloseMain, bCallStopAllTimersAndThreads=#True)
Declare closeAllForms(bCloseMain)
Declare colorLine(pCuePtr, nHostWindow=#WMN)
Declare colorCueListEntries()
Declare debugProd(*rProd.tyProd)
Declare debugCuePtrs(pCuePtr=-1)
Declare debugCuePtrs2()
Declare displayDemoCount()
Declare setAudDescrsForAorP(pSubPtr, bPrimaryFile=#True)
Declare setPlayIndexesFromPlayOrder(pSubPtr)
Declare processSamSetPlayOrder(sCue.s, nSubNo, sPlayOrder.s, nFirstPlayAudNoThisRun)
Declare generatePlayOrder(pSubPtr, bPrimaryFile=#True, bRetainPlayOrderIfPossible=#False, bUseInitialSettingsIfRelevant=#False)
Declare goClicked(bMouseClick = #False)
Declare goIfOK()
Declare resetInitialStateOfCue(pThisCuePtr, pCurrentCuePtr)
Declare GoToCue(pCuePtr, bSetCueToGo=#True, bDisplayWarning=#False, bApplyDefaultGridClickAction=#False)
Declare callSubr(pCuePtr)
Declare resetRelatedCueActivationMethodReqd(pCuePtr)
Declare goToCueNonLinear(pCuePtr, bSetCueToGo=#True, bResettingStepHotkeys=#False)
Declare goToCueLabel(sCue.s, bSetCueToGo=#True)
Declare standbyGoClicked()
Declare stayAwake(sMessage.s)
Declare MouseDown(nMouseButton)
Declare MouseRightClick()
Declare highlightLine(pCuePtr, pCallLine=0)
Declare loadGridRow(pCuePtr)
Declare loadGridRowsWhereRequested()
Declare.s getHotkeyFromHotkeyNr(nHotkeyNr)
Declare getHotkeyBank(sHotkey.s)
Declare loadCurrHotkeys()
Declare saveCurrHotkeyInfo(nCurrHotkeyPtr)
Declare setHotkeyBank(nSelectedBankIndex)
Declare getHotkeyNrForHotkey(sHotkey.s)
Declare loadHotkeyArray()
Declare getCurrHotkeyPtrForCuePtr(pCuePtr)
Declare getHotkeyPtrForHotkey(pHotkey.s)
Declare getCurrHotkeyPtrForHotkey(pHotkey.s)
Declare getCurrHotkeyPtrForHotkeyNr(pHotkeyNr)
Declare getCurrHotkeyPtrForVK(nVirtualKey.l)
Declare countNoteHotkeysPlaying()
Declare checkForNoteHotkeysReleased()
Declare.s loadOtherInfoTextForAud(pAudPtr, pSubInfoText.s, bDisplayExclusive = #False)
Declare buildDisplayInfoForCtrlSend(*rSub.tySub, nIndex, bPrimaryFile=#True)
Declare loadOneCue(pCuePtr)
Declare unloadOneCue(pCuePtr)
Declare populateGrid()
Declare resetAllActivationMethodReqdEtc()
Declare resetCueStates(pCuePtr, pSelectedCueOnly=#False)
Declare setDelayHideInds()
Declare setCueBassDevsAndMidiPortNos(pSubPtr=-1)
Declare setCuePosition(pCuePtr)
Declare setCuePtrs(bFirstTime)
Declare setCuePtrs2nd(bFirstTime)
Declare setCuePtrForSFRPrevCueType(pSubPtr, pSFRIndex)
Declare setCuePtrForSFRPrevCueType2(pSubPtr, pSFRIndex)
Declare setCuePtrForAutoStartPrevCueType(pCuePtr)
Declare setCuePtrForAutoStartPrevCueType2(pCuePtr)
Declare clearCurrHotkeyToggleState(pCuePtr)
Declare getCueStatePriority(nCueState)
Declare setCueState(pCuePtr, bIncludeSubCountDown=#False, bIgnoreStartedInEditor=#False, bForceLoadGridRow=#False)
Declare setCueLength(pCuePtr)
Declare getAutoActStartCuePtr(pCuePtr)
Declare setInitCueStates(pCuePtr, pCurrentCuePtr, bLeavePlayingState=#False, bPrimaryFile=#True, bIgnoreStartedInEditor=#False)
Declare resetSubStatesForSFRsIfReqd()
Declare setDefaults_PropogateProdDevs()
Declare thisSubrPlaying(nSubrCuePtr)
Declare setCueToGo(bSetNextManualCue=#True, nReqdCuePtr=-1, bCalledFromOpenNextCues=#False, bApplyDefaultGridClickAction=#False)
Declare setLastPlayingCue(pCuePtr)
Declare checkLastPlayingCue()
Declare setGoButton()
Declare setGoButtonTip()
Declare setNavigateButtons()
Declare setLinksForAudsWithinSubsForCue(pCuePtr)
Declare setMTCLinksForAllCues()
Declare setLinksForCue(pCuePtr)
Declare clearLinksForCue(pCuePtr)
Declare setSaveSettings(bRefreshOnly=#False)
Declare resetTOD()
Declare stopEverythingPart1(pCuePtr=-1, bResetAfterStop=#True, bResumeThreadsAfterStop=#True, bResettingTOD=#False)
Declare stopEverythingPart2(pCuePtr=-1, bResetAfterStop=#True, bResumeThreadsAfterStop=#True)
Declare pauseAll()
Declare resetSubTimeToStart(pSubPtr)
Declare resetCueTimeToStart(pCuePtr)
Declare resumeAll()
Declare updateRFL(sThisCueFile.s="")
Declare deleteFromRFL(pCueFile.s)
Declare savePreferences()
Declare savePreferencesForFavFiles()
Declare updateGrid(pCuePtr)
Declare updateAllGrid()
Declare updateAllGridFileInfo()
Declare getPanelIndexForAud(pAudPtr)
Declare clearSaveSettings()
Declare resetSessionOptions(bInDevChgs=#False)
Declare addToSaveSettings(pSubPtr)
Declare getSaveSettingsDevIndexForLogicalDevIndex(nSSIndex, nLogicalDevIndex)
Declare removeFromSaveSettings(pSubPtr)
Declare removeFromSaveSettingsIfReqd(pSubPtr)
Declare buildSaveSettingsMenu()
Declare inSaveSettings(pSubPtr)
Declare displayReasonsForSave()
Declare countReasonsForSave(bIgnoreUnsavedEditorGraphs=#False, bIgnoreUnsavedPlaylistOrderInfo=#False)
Declare.s listReasonsForSave(bSkipHeader=#False, bIgnoreUnsavedEditorGraphs=#False, bIgnoreUnsavedPlaylistOrderInfo=#False)
Declare endOfAud(pAudPtr, pReqdStatus)
Declare endOfSub(pSubPtr, pReqdStatus)
Declare doUnloadMain()
Declare.s getActiveWindowApplication()
Declare.s getActiveWindowTitle()
Declare setFocusToSCS()
Declare checkMainHasFocus(pCaller)
Declare checkPauseAllActive(pCaller)
Declare makeMainWindowActive()
Declare setGrdCuesRowNos()
Declare setGridRow(pCuePtr)
Declare setTimeProfileCount(*rProd.tyProd)
Declare setTimeBasedCues(pCuePtr=-1, bChangingTimeProfile=#False)
Declare setCheckForResetTOD()
Declare saveLastPicInfo(pAudPtr)
Declare calcCueTimeForRAI(pCuePtr)
Declare checkFileVisualWarningTimeAvailable(pCuePtr)
Declare displayVisualWarningIfReqd()
Declare startTimeOfDayClock()
Declare displayTimeOfDayClockIfReqd()
Declare clearCountdownClock()
Declare startCountdownClock()
Declare setDisplayPanFlags()
Declare listCueStates(pCuePtr=-1, bCuesOnly=#False)
Declare getNextManualCue(pCuePtr)
Declare getEarliestPlayingSubTypeF()
Declare setNonLinearCueFlags()
Declare checkDevTypePresent(nDevGrp, nDevType, bInDevChgs)
Declare setMidiEnabled(bInDevChgs=#False)
Declare setRS232Enabled(bInDevChgs=#False)
Declare setDMXEnabled(bInDevChgs=#False)
Declare setNetworkEnabled(bInDevChgs=#False)
Declare.s getSubFileNameForGrid(pSubPtr)
Declare.s getSubFileTypeForGrid(pSubPtr)
Declare.s getSubDBLevelForGrid(pSubPtr)
Declare getSubLength(pSubPtr, bIgnoreContinuous=#False, pCallCueSubPtr=-1)
Declare.s getSubLengthForGrid(pSubPtr)
Declare getCueLength(pCuePtr, pCallCueSubPtr=-1)
Declare getCueLengthForMTCLink(pCuePtr)
Declare.s getLengthForGrid(pCuePtr)
Declare updateScreenForCue(pCuePtr, bStandBy=#False)
Declare countCuePointCues()
Declare processProdTimerAction(nProdTimerAction, nProdTimerWhen, pCuePtr)
Declare setOpenWithPrevAudInds(pSubPtr)
Declare listSplitScreenArray()
Declare populateScreenArray()
Declare getScreenNo(nDisplayNo, nOutputNo)
Declare findFirstNonVideoMonitor()
Declare ensureWindowNotBehindVideoScreen(nWindowNo)
Declare.s loadDevInfoForSub(pSubPtr, bAndFollowingSubs=#False)
Declare EnableDisableCues(bEnable, pFirstCuePtr, pLastCuePtr=-1, pCallingCuePtr=-1)
Declare clearInitializingState()
Declare setRunState(sRunState.s, bSetSessionId=#False)
Declare.s getRunState()
Declare earlyCloseDown()
Declare setGoOkIfExclPlaying(pCuePtr)
Declare resetThreadExecutionState()
Declare applyThreadExecutionState()
Declare drawMultiLineText(x, y, nMaxWidth, nMaxHeight, sText.s, FrontColor=-1, BackColor=-1)
Declare createBlankProd()
Declare processAction()
Declare processStopAll()
Declare processStopMTC()
Declare processFadeAll()
Declare processPauseResumeAll()
Declare setRandomSeed()
Declare setFirstPlayIndexThisRun(pSubPtr, bUsePosFromDatabase)
Declare setPlaylistTrackReadyState(pAudPtr)
Declare setMemoScreen1InUseInd()
Declare WriteOrRemovePreferenceInteger(sKey.s, nValue.i, nRemoveValue.i)
Declare WriteOrRemovePreferenceString(sKey.s, sString.s, sRemoveString.s)
Declare getDontAskTellToday(sPrefKey.s)
Declare setDontAskTellToday(sPrefKey.s)
Declare setCueStateAndUpdateGrid(pCuePtr)
Declare completeAssocAutoStartCues(pCuePtr, pExcludingCuePtr=-1)
Declare readyAssocAutoStartCues(pCuePtr, pExcludingCuePtr=-1)
Declare holdAssocAutoStartCues(pCuePtr)
Declare setSubToCountDown(pSubPtr, qTimeToStart.q)
Declare setCueToCountDown(pCuePtr, qTimeToStart.q)
Declare clearManualOffsets(pPrimaryAudPtr)
Declare resetLinks(pCuePtr)
Declare.s getSubTypeForAud(pAudPtr)
Declare getFileScanMaxLength(sSubType.s)
Declare getFileScanMaxLengthMS(sSubType.s)
