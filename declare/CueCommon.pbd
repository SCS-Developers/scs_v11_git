Declare populateCueTypeArray()
Declare createfmEditSubIfReqd(pSubType.s)
Declare commonValidation()
Declare sanityCheck()
Declare setEditorComponentVisible(sType.s)
Declare.s debugCueTypes(pCuePtr)
Declare.s debugCueTypes2(pCuePtr)
Declare.s debugSubTypes(pSubPtr)
Declare.s debugSubTypes2(pSubPtr)
Declare colorEditorComponent(nEditorComponent, nFirstGadgetNo=-1, nLastGadgetNo=-1)
Declare.s buildDefaultSubDescr(pSubPtr=-5)
Declare setDefaultSubDescr(pSubPtr=-5, bUpdateScreen=#True)
Declare setDefaultCueDescr(pCuePtr=-5, pSubPtr=-5)
Declare setDerivedCueFields(pCuePtr, pColorsOnly)
Declare setDerivedCueFields2(pCuePtr, pColorsOnly)
Declare.s loadOtherInfoTextForSub(pSubPtr)
Declare validateAll()
Declare loadCueTypeText()
Declare changeCueLabel(pOldCue.s, pNewCue.s, bCallChangeSubs, pOrigCue.s="", sUndoDescr.s="")
Declare checkDelCueRI(pCuePtr, sMsgStart.s, nAction=0, nCalledFromWindow=#WED)
Declare checkDelSubRI(pSubPtr, sMsgStart.s, nAction=0)
Declare checkExportCueRI(pCuePtr)
Declare createEditorToolBar(nLeft, nTop, nWidth, nHeight, nHostId)
Declare adjustEditorDetailsForSplitterSize()
Declare setSubHeader(nGadgetNo, pSubPtr)
Declare setProdGlobalLevels(bFirstTime=#False)
Declare setProdGlobals(bInSetIndependantDefaults=#False, bFirstTime=#False)
Declare setDerivedProdFields()
Declare setLTSubArrays(*rProd.tyProd, *rSub.tySub, bPrimeArrays=#False)
Declare setLTMaxChaseStepIndex(*rProd.tyProd, *rSub.tySub)
Declare listLTSubArraySizes(*rSub.tySub)
Declare setLCDevPresentInds(pSubPtr)
Declare setDerivedSubFields(pSubPtr, bPrimaryFile=#True)
Declare setDerivedLoopInfo(pAudPtr, nLoopInfoIndex=-1, bPrimaryFile=#True)
Declare setDerivedAudScreenInfoFields(pAudPtr)
Declare setDerivedAudFields(pAudPtr, bPrimaryFile=#True)
Declare setDerivedFieldsForSubAuds(pSubPtr, bPrimaryFile=#True)
Declare closeEditorForms()
Declare setAutoIncludeDefaults(*rProd.tyProd)
Declare getFirstPlayingCue()
Declare getFirstEnabledCue()
Declare getFirstEnabledSubForCue(pCuePtr)
Declare getFirstReqdAudForCue(pCuePtr)
Declare getFirstEnabledAudTypeForCue(pCuePtr, sSubTypes.s="F")
Declare getNextEnabledSub(pSubPtr)
Declare loadArrayOutputScreenReqd(pSubPtr)
Declare setCueSubsAllDisabledFlag(pCuePtr)
Declare calcRealPrevSubIndex(pSubPtr)
Declare loadCueBrackets(bTrace=#False)
Declare getCueBracket(pCuePtr)
Declare getFirstActiveCueBracket()
Declare getHideCueOpt(pCuePtr)
Declare calcHeightFromWidthAndAspectRation(nWidth, nAspectRatio)
Declare setSubLTDisplayInfo(*rSub.tySub)
Declare resetLastSubAndLastAud()
Declare loadCurrScribbleStrip(pCuePtr, pSubNo, pCtrlSendIndex)
Declare.s getScribbleStripItemName(*rScribbleStrip.tyScribbleStrip, sValType.s, nDataValue)
Declare setScribbleStripItemName(*rScribbleStrip.tyScribbleStrip, sValType.s, nDataValue, sItemName.s)
Declare sortScribbleStripItems(nRemDevId, *rScribbleStrip.tyScribbleStrip)
Declare updateSubCtrlSendMsgsForScribbleStripItemNames(pSubPtr)
Declare updateCtrlSendMsgsForScribbleStripItemNames(pCuePtr=-1, pSubNo=-1, pCtrlSendIndex=-1)
Declare.s buildTempoEtcValueString(pSubPtr)
Declare.s buildTempoEtcInfo(pSubPtr)
Declare calcCueStartValues(pCuePtr)
Declare ignoreRequestIfWithinDoubleClickTime(nRequestType)
Declare populateCallableCueParamArray(*rCue.tyCue)
Declare getCallableCueParamIndex(*rCue.tyCue, sParamId.s)
Declare.s getCallableCueParamDefault(*rCue.tyCue, sParamId.s)
Declare populateCallCueParamArray(*rSub.tySub, bPrimaryFile=#True)
Declare getChangeCodeForLCAction(nLCAction)
Declare getLCActionForChangeCode(nChangeCode)
Declare getChangeCodeForAFAction(nAFAction)
Declare getAFActionForChangeCode(nChangeCode)
Declare.f getDefaultValueForChangeCode(nChangeCode)
Declare calcMTCStartTimeForSub(pSubPtr)
Declare setMTCStartTimesForCueSubs(pCuePtr)
Declare setTempoEtcConstants(nChangeCode)
Declare checkTempoEtcUsable()
Declare getValueForNumericParameter(*rSub.tySub, nSubValue, sSubCallCueParamId.s, nParameterDecimals=0, pCallCueSubPtr=-1)
Declare isNumericValueACallCueParamId(sValue.s, pSubPtr)
Declare.s makeDisplayTimeValue(sTimeValue.s, nTimeValue)
Declare.s makeDisplayTimeValueD(sTimeValue.s, nTimeValue)
Declare.s makeDisplayTimeValueT(sTimeValue.s, nTimeValue)
Declare.s makeDisplayTimeValueBWZT(sTimeValue.s, nTimeValue)
Declare applyCallCueParameters(nSubPtr)
Declare setOrClearGadgetValidValuesFlag()
Declare.s makeShortDescr(sLabel.s, sDescr.s, nMaxLength=20)
Declare getPLRepeatActive(pSubPtr)
