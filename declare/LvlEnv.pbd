Declare addOneLevelPoint(pAudPtr, nPointTime, nPointType)
Declare addOneDBLevelPointItem(pAudPtr, nLevelPointIndex, sLogicalDev.s, sTracks.s, bReqdItemInclude, fReqdItemRelDBLevel.f, fReqdItemPan.f)
Declare removeOneLevelPoint(pAudPtr, nLevelPointIndex)
Declare addDBLevelPointItemsWithSameSettings(pAudPtr, nLevelPointIndex, fItemRelDBLevel.f, fItemPan.f)
Declare addLevelPointItemsForNewDevice(pAudPtr, pDevNo)
Declare setLevelPointDesc(pAudPtr, nLevelPointIndex)
Declare setDerivedLevelPointInfo2(pAudPtr)
Declare clearLevelPoints(pAudPtr)
Declare removeStartAndEndLvlPtsIfReqd(pAudPtr)
Declare recalcLvlPtLevels(pAudPtr)
Declare recalcLvlPtPans(pAudPtr)
Declare removeNonExistentDevsFromLvlPts(pAudPtr)
Declare changeLogicalDevsInLvlPts(sLogicalDevOld.s, sLogicalDevNew.s)
Declare propagateLvlPtLevelAndPanSelection(pAudPtr, pLevelPointIndex, bDoLevelSel=#True, bDoPanSel=#True)
Declare setLevelPointItemDevNos(pAudPtr)
Declare getMaxTimeForPoint(pAudPtr, nPointTime)
Declare getMinTimeForPoint(pAudPtr, nPointTime)
Declare getMaxFadeInTime(pAudPtr)
Declare getMaxFadeOutTime(pAudPtr)
Declare.f relDBLevelToLevel(fRelDBLevel.f, fDevLevel.f)
Declare.f getTrimmedDBLevel(pAudPtr, pDevNo)
Declare setLinkRelLevels(pAudPtr, pLevelPointIndex)
Declare adjustRelLevelsForLink(pAudPtr, pLevelPointIndex, fRelDBLevelChangeExt.f)
Declare setRelLevelsForSync(pAudPtr, pLevelPointIndex, fReqdDBLevel.f)
Declare setLvlPtPansAtAudDevPan(pAudPtr)
Declare sanityCheckLevelPoints(pAudPtr)
Declare getNextLevelPointIndex(pAudPtr, nPosInFile)
Declare getNextIncludedLevelPointIndex(pAudPtr, pDevNo, nPosInFile)
Declare getPrevLevelPointIndex(pAudPtr, nPosInFile)
Declare getPrevIncludedLevelPointIndex(pAudPtr, pDevNo, nPosInFile)
Declare getTimeOfFirstNonStartLevelPoint(pAudPtr)
Declare getItemIndexForDevNo(pAudPtr, nLevelPointIndex, pDevNo)
Declare getLevelPointIndexForId(pAudPtr, nLevelPointId)
Declare getLevelPointIndexForTime(pAudPtr, nLevelPointTime)
Declare getLevelPointIdForTime(pAudPtr, nLevelPointTime)
Declare getLevelPointIndexForType(pAudPtr, nLevelPointType, nLevelPointTime=-1)
Declare getLevelPointIdForType(pAudPtr, nLevelPointType, nLevelPointTime=-1)
Declare getLevelPointTypeForTime(pAudPtr, nLevelPointTime)
Declare getLevelPointItemIndex(pAudPtr, nLevelPointIndex, sLogicalDev.s, sTracks.s)
Declare maintainFadeInLevelPoint(pAudPtr, nOldFadeInTime, nNewFadeInTime)
Declare maintainFadeOutLevelPoint(pAudPtr, nOldFadeOutTime, nNewFadeOutTime)
Declare listLevelPoints(pAudPtr)
Declare listLvlPtRun(pAudPtr)
Declare loadLvlPtRun(pAudPtr, pCuePos, bClearSuspendFlags, bTrace=#False)
Declare doLvlPtRun(pAudPtr, pCuePos)
Declare suspendLvlPtProcessing(pAudPtr)
Declare addSelectedCtrlHoldLP(nPointId)
Declare removeSelectedCtrlHoldLP(nPointId)
Declare clearCtrlHoldLP()
Declare checkSelectedCtrlHoldLP(nPointId)
Declare checkLevelPointInCtrlHoldList(nPointId)
Declare countSelectedLevelPointsInCtrlHoldList()
