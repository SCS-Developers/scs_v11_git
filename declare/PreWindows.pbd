Declare scsErrorHandler(nErrorCode, pProcName.s, nParam1=0, nParam2=0, sInfo.s="")
Declare killRecoveryFile()
Declare getGadgetArrayIndex(nGadgetNo)
Declare getGType(sProcName.s, nGadgetNo)
Declare.s getGadgetNameProc(sProcName.s, nGadgetNo, bIncludeWindow=#True)
Declare getGadgetWindowNo(sProcName.s, nGadgetNo)
Declare getGadgetReqdWidth(sProcName.s, nGadgetNo)
Declare scsToolTip(nGadgetNo, sToolTip.s)
Declare drawCheckBoxGadget2(nGadgetNo)
Declare drawOptionGadget2(nGadgetNo)
Declare drawOwnGadget(nGadgetNo, nGadgetType)
Declare getOwnFlags(nGadgetNo)
Declare setOwnFont(nGadgetNo, nFontNo)
Declare getOwnValue(nGadgetNo)
Declare setOwnValue(nGadgetNo, nValue)
Declare getOwnState(nGadgetNo)
Declare setOwnState(nGadgetNo, nState)
Declare getOwnEnabled(nGadgetNo)
Declare setOwnEnabled(nGadgetNo, bEnabled)
Declare.s getOwnText(nGadgetNo)
Declare setOwnText(nGadgetNo, sText.s)
Declare setOwnColor(nGadgetNo, nColorType, nColor)
Declare setGType(nGadgetNo, nGType)
Declare.s buildWindowProcName(pProcName.s, pWindowNo)
Declare.s buildGadgetProcName(pProcName.s, nGadgetNo)
Declare scsSetGadgetFont(nGadgetNo, nFontNo)
Declare obtainSplitterSeparatorSizes()
Declare obtainPanelContentOffsets()
Declare.s GadgetNoAndName(nGadgetNo=-1)
Declare getWindowEnabled(nWindowNo)
Declare setWindowEnabled(nWindowNo, bEnable)
Declare.s getWindowName(nWindowNo)
Declare setWindowName(nWindowNo, sName.s)
Declare getWindowVisible(nWindowNo)
Declare setWindowVisible(nWindowNo, bVisible)
Declare getWindowSticky(nWindowNo)
Declare setWindowSticky(nWindowNo, bSticky)
Declare getAllowEditorColors(nGadgetNo)
Declare setAllowEditorColors(nGadgetNo, bAllowEditorColors)
Declare getButtonType(nGadgetNo)
Declare setButtonType(nGadgetNo, nButtonType)
Declare getEnabled(nGadgetNo)
Declare setEnabled(nGadgetNo, bEnable, bSetBackgroundColor=#False)
Declare refreshEnabledState(nGadgetNo)
Declare getResizeFlags(nGadgetNo)
Declare setResizeFlags(nGadgetNo, nResizeFlags)
Declare getReverseEditorColors(nGadgetNo)
Declare setReverseEditorColors(nGadgetNo, bReverseEditorColors)
Declare getIgnoreDisabledColor(nGadgetNo)
Declare setIgnoreDisabledColor(nGadgetNo, bIgnoreDisabledColor)
Declare getUpperCase(nGadgetNo)
Declare setUpperCase(nGadgetNo, bUpperCase)
Declare.s getValidChars(nGadgetNo)
Declare setValidChars(nGadgetNo, sValidChars.s)
Declare getVisible(nGadgetNo)
Declare setVisible(nGadgetNo, bVisible)
Declare getWindowNo(nGadgetNo)
Declare setWindowNo(nGadgetNo, nGWindowNo)
Declare scsEnableMenuItem(nMenu, nMenuItem, bEnable)
Declare scsEnableMenuItem2(nMenu, nMenuItem, bEnable, nMenu2)
Declare scsSetMenuItemText(nMenu, nMenuItem, sText.s)
Declare newGadget(sName.s, nOrigLeft, nOrigTop, nOrigWidth, nOrigHeight, nGType=0, nGadgetNoForEvHdlr=0, nModGadgetType=0)
Declare scsFreeGadget(nGadgetNo)
Declare setGadgetNoForEvHdlr(nGadgetNo, nGadgetNoForEvHdlr)
Declare scsButtonGadget(X, Y, Width, Height, Text$, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare modButtonGadget(X, Y, Width, Height, Text$, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare scsButtonImageGadget(X, Y, Width, Height, ImageId, flags=0, sName.s="")
Declare scsCanvasGadget(X, Y, Width, Height, flags=0, sName.s="", nGadgetNoForEvHdlr=0, nGType=0)
Declare scsCheckBoxGadget(X, Y, Width, Height, Text$, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare scsCheckBoxGadget2(X, Y, Width, Height, Text$, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare scsButtonGadget2(X, Y, Width, Height, Text$, flags=0, nOGFlags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare drawButtonGadget2(nGadgetNo)
Declare setButtonGadget2Text(nGadgetNo, sText.s)
Declare scsCloseGadgetList()
Declare scsComboBoxGadget(X, Y, Width, Height, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare modComboBoxGadget(X, Y, Width, Height, maxListHeight=80, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare scsContainerGadget(X, Y, Width, Height, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare scsMyGridGadget(nWindowNo, X, Y, Width, Height, Rows, Cols, DoNotDraw=#False, NoColScrollBar=#False, NoRowScrollBar=#False, sName.s="", nGadgetNoForEvHdlr=0)
Declare scsCopyImage(nSourceImageNo)
Declare scsUseGadgetList(nWindowID, nGadgetNo=0)
Declare scsCreateImage(Width, Height, Depth=24)
Declare scsCreateMenu(nMenuHandle, nWindowNo)
Declare scsCreatePopupImageMenu(nMenuHandle, flags=0)
Declare scsCreatePopupMenu(nMenuHandle)
Declare scsDrawingFont(nFontNo)
Declare scsEditorGadget(X, Y, Width, Height, flags=0, sName.s="")
Declare scsFrameGadget(X, Y, Width, Height, Text$, flags=0, sName.s="")
Declare scsHyperLinkGadget(X, Y, Width, Height, Text$, Color, flags=0, sName.s="")
Declare scsImageGadget(X, Y, Width, Height, ImageId, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare scsIPAddressGadget(X, Y, Width, Height, sName.s="")
Declare scsLineGadget(X, Y, Width, Height, nColor, flags=0, sName.s="")
Declare scsListIconGadget(X, Y, Width, Height, Title$, TitleWidth, flags=0, sName.s="")
Declare scsListViewGadget(X, Y, Width, Height, flags=0, sName.s="")
Declare scsLoadImage(sFileName.s)
Declare scsMenuButtonGadget(X, Y, Width, Height, sText.s, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare scsMenuItem(nMenuItemNo, sText.s, sShortcut.s="", bLookupMenuText=#True, nImageNo=0)
Declare scsExplorerComboGadget(X, Y, Width, Height, sDirectory.s, flags=0, sName.s="")
Declare scsExplorerTreeGadget(X, Y, Width, Height, sDirectory.s, flags=0, sName.s="")
Declare scsExplorerListGadget(X, Y, Width, Height, sDirectory.s, flags=0, sName.s="")
Declare scsCueTypeMenuItem(sCueType.s, nMenuItemNo, sText.s, sShortCut.s="", bLookupMenuText=#True, nImageNo=0)
Declare scsMenuItemFast(nMenuItemNo, sFastText.s, sShortCut.s="", nImageNo=0)
Declare scsOpenGadgetList(nGadgetNo, nGadgetItem=-1)
Declare scsOptionGadget(X, Y, Width, Height, Text$, sName.s="")
Declare scsOptionGadget2(X, Y, Width, Height, Text$, sName.s="")
Declare scsPanelGadget(X, Y, Width, Height, sName.s="")
Declare scsProgressBarGadget(X, Y, Width, Height, Minimum, Maximum, flags=0, sName.s="")
Declare scsShortcutGadget(X, Y, Width, Height, Shortcut=0, sName.s="")
Declare scsScrollAreaGadget(X, Y, Width, Height, ScrollAreaWidth, ScrollAreaHeight, ScrollStep, flags=0, sName.s="")
Declare scsScrollBarGadget(X, Y, Width, Height, Minimum, Maximum, PageLength, flags=0, sName.s="")
Declare scsSplitterGadget(X, Y, Width, Height, nGadget1, nGadget2, flags=0, sName.s="")
Declare scsStringGadget(X, Y, Width, Height, Content.s, flags=0, sName.s="", nGadgetNoForEvHdlr=0, nLength=0)
Declare scsTextGadget(X, Y, Width, Height, Text.s, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare modTextGadget(X, Y, Width, Height, Text.s, flags=0, sName.s="", nGadgetNoForEvHdlr=0)
Declare scsTrackBarGadget(X, Y, Width, Height, Minimum, Maximum, flags=0, sName.s="")
Declare scsTreeGadget(X, Y, Width, Height, flags=0, sName.s="")
Declare scsStandardButton(X, Y, Width, Height, nButtonType, sName.s="", bUseSmall=#False)
Declare redrawCvsBtn(nButton)
Declare scsStandardCanvasButton(X, Y, Width, Height, nButtonType, sName.s="")
Declare setCurrWindowGlobals(nWindowNo)
Declare registerWindow(nWindowNo, sWindowName.s, nParentWindow=0)
Declare registerGrid(*pGridInfo.tyGridInfo, nGadgetNo, nGridType, sColTypes.s)
Declare addGadgetItemWithData(nGadgetNo, sText.s, nData)
Declare setVisibleAndEnabled(nGadgetNo, bVisibleAndEnabled)
Declare autoFitGridCol(nGadgetNo, nColNo=-1)
Declare scsCloseWindow(nWindowNo)
Declare checkSaveToBeEnabled()
Declare centreForm(hWindow)
Declare getFormPosition(hWindow, *rWindowInfo.tyWindow, bSetSize=#False)
Declare calcTextWidth(nWindowNo, nGadgetNo, sValue.s)
Declare getMaxTextWidth(nMinWidth, sText1.s, sText2.s="", sText3.s="", sText4.s="", nFontNo=#SCS_FONT_GEN_NORMAL)
Declare getMonitorNrForXY(X, Y)
Declare setFormPosition(hWindow, *rWindowInfo.tyWindow, nTotalWidthOfWindows=-1, bAllowCrossMonitor=#False)
Declare getPhysicalDevPtr(nDevType, sPhysicalDev.s, nAudioDriver=0, sDMXSerial.s="", nDMXSerial.l=0, bDummy=#False, bDefaultDev=#False)
Declare getPhysicalDevPtrOfDefaultDev(nDevType)
Declare countAudioDevsRequested(*prProd.tyProd)
Declare setWindowModal(nWindowNo, bModal, nReturnFunction=0, nReturnFunctionParam=0)
Declare unsetWindowModal(nWindowNo, nReturnFunctionResult=0)
Declare OpenURL(sURL.s)
Declare chkToBoolean(hCheckBox)
Declare setTextBoxBackColor(pTxtField)
Declare condFreeImage(nImageNo, nLineNumber=0)
Declare GetTextWidth(sText.s, nFontNo=#SCS_FONT_GEN_NORMAL)
Declare GetTextWidthForGadget(sText.s, nGadgetNo)
Declare GetTextWidthForStringGadget(sText.s)
Declare GetTextHeight(sText.s, nFontNo=#SCS_FONT_GEN_NORMAL)
Declare GetTextHeightForGadget(sText.s, nGadgetNo)
Declare setToolTipControls()
Declare setToolTipFromTextIfReqd(nGadgetNo, bMayChangeDuringRun=#False)
Declare setGadgetWidth(nGadgetNo, nMinWidth=-1, bResetNextX=#False, nMaxWidth=-1, bIncreaseHeightIfReqd=#False)
Declare setTextGadgetHeight(nGadgetNo, nMinHeight=-1)
Declare resetNextX(nGadgetNo)
Declare resetScaWidth(nScaGadgetNo, nLastEmbeddedGadgetNo, nPadding=0)
Declare resetActiveWindowIfReqd(nActiveWindow, nDefaultWindow=#WMN)
Declare.i setComboBoxWidth(nComboBoxGadgetNo, nMinWidth=-1, bResetNextX=#False, nMaxWidth=999)
Declare getComboBoxMaxTextWidth(nComboBoxGadgetNo)
Declare setComboBoxesWidth(nMinWidth, nComboBoxGadgetNo1, nComboBoxGadgetNo2=0, nComboBoxGadgetNo3=0, nComboBoxGadgetNo4=0, nComboBoxGadgetNo5=0)
Declare setComboBoxForText(nComboBoxGadgetNo, sText.s)
Declare makeGadgetBorderless(nGadgetNo)
Declare setSpecialColor(nGadgetNo, nBackColor)
Declare ensureScrollAreaItemVisible(nSCAGadgetNo, nItemHeight, nItemIndex)
Declare AutoSize(gadgetNo, alignFlag=0, nMinWidth=0)
Declare getGadgetColumnCount(nGadgetNo)
Declare removeAllGadgetColumns(nGadgetNo)
Declare setCheckboxStateFromBoolean(nGadgetNo, bBoolean)
Declare bringWindowToFront(nWindowNo)
Declare scsOpenWindow(WindowNo, x, y, InnerWidth, InnerHeight, Title$, Flags, HostWindow)
Declare getGadgetContainerBackColor(nGadgetNo)
Declare IsBitSet(InByte.a, Bit.a)
Declare GadgetCallBackForIgnoreMouseWheel(hWnd, Message, wParam, lParam)
Declare ignoreMouseWheelEvents(nGadgetNo, nArrayIncrement=20)
Declare setScaInnerWidth(nGadgetNo, bBorderless=#True)

