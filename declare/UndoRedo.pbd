Declare changedSinceLastSave()
Declare clearUndoItems()
Declare initUndoItems()
Declare newUndoGroup(nItemType, nItemId, nAction, nOldPtr, nNewPtr, nSubRef, sDescr.s, nExtraParam)
Declare preChangeItemInfo(nItemType, nOldPtr, nItemId, nAction, nFlags, nSubRef, sDescr.s, nExtraParam, bForceNewGroup=#False)
Declare postChangeItemInfo(pUndoItemPtr, nNewPtr, sDescr.s = "")
Declare preChangeAudL(nOld, sUndoDescr.s="", nOldAudPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nAudId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeAudF(fOld.f, sUndoDescr.s="", nOldAudPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nAudId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeAudS(sOld.s, sUndoDescr.s="", nOldAudPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nAudId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeAudV(sUndoDescr.s="", nOldAudPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nAudId=0, nExtraParam=0, bForceNewGroup=#False)
Declare postChangeAudL(pUndoItemPtr, nNew, nNewAudPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeAudF(pUndoItemPtr, fNew.f, nNewAudPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeAudS(pUndoItemPtr, sNew.s, nNewAudPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeAudLN(pUndoItemPtr, nNew, nNewAudPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeAudFN(pUndoItemPtr, fNew.f, nNewAudPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeAudSN(pUndoItemPtr, sNew.s, nNewAudPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeAudV(pUndoItemPtr, nNewAudPtr=-5, nIndex=-1, sUndoDescr.s="", bSetCloseCueWhenLeavingEditor=#True)
Declare preChangeCueL(nOld, sUndoDescr.s, nOldCuePtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nCueId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeCueF(fOld.f, sUndoDescr.s, nOldCuePtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nCueId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeCueS(sOld.s, sUndoDescr.s, nOldCuePtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nCueId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeCueV(sUndoDescr.s, nOldCuePtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nCueId=0, nExtraParam=0, bForceNewGroup=#False)
Declare postChangeCueL(pUndoItemPtr, nNew, nNewCuePtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeCueF(pUndoItemPtr, fNew.f, nNewCuePtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeCueS(pUndoItemPtr, sNew.s, nNewCuePtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeCueV(pUndoItemPtr, nNewCuePtr=-5, nIndex=-1, sUndoDescr.s="")
Declare preChangeSubL(nOld, sUndoDescr.s, nOldSubPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nSubId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeSubF(fOld.f, sUndoDescr.s, nOldSubPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nSubId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeSubD(dOld.d, sUndoDescr.s, nOldSubPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nSubId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeSubS(sOld.s, sUndoDescr.s, nOldSubPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nSubId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeSubV(sUndoDescr.s, nOldSubPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nSubId=0, nExtraParam=0, bForceNewGroup=#False)
Declare postChangeSubL(pUndoItemPtr, nNew, nNewSubPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeSubF(pUndoItemPtr, fNew.f, nNewSubPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeSubD(pUndoItemPtr, dNew.d, nNewSubPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeSubS(pUndoItemPtr, sNew.s, nNewSubPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeSubLN(pUndoItemPtr, nNew, nNewSubPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeSubFN(pUndoItemPtr, fNew.f, nNewSubPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeSubSN(pUndoItemPtr, sNew.s, nNewSubPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeSubV(pUndoItemPtr, nNewSubPtr=-5, nIndex=-1, sUndoDescr.s="", bSetCloseCueWhenLeavingEditor=#True)
Declare preChangeProdL(nOld, sUndoDescr.s, nOldProdPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nProdId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeProdF(fOld.f, sUndoDescr.s, nOldProdPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nProdId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeProdS(sOld.s, sUndoDescr.s, nOldProdPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nProdId=0, nExtraParam=0, bForceNewGroup=#False)
Declare preChangeProdV(sUndoDescr.s, nOldProdPtr=-5, nAction=#SCS_UNDO_ACTION_CHANGE, nIndex=-1, nFlags=0, nProdId=0, nExtraParam=0, bForceNewGroup=#False)
Declare postChangeProdL(pUndoItemPtr, nNew, nNewProdPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeProdF(pUndoItemPtr, fNew.f, nNewProdPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeProdS(pUndoItemPtr, sNew.s, nNewProdPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare postChangeProdV(pUndoItemPtr, nNewProdPtr=-5, nIndex=-1, sUndoDescr.s="")
Declare undoAvailable()
Declare redoAvailable()
Declare undoLastGroup(*pLastGroupInfo.tyLastGroupInfo)
Declare redoLastGroup(*pLastGroupInfo.tyLastGroupInfo)
Declare buildUndoRedoList(bUndoList)
Declare cancelGroupIfReqd()
Declare setLatestUndoGroupIdAtSave()
Declare.s decodeUndoType(nType)
Declare.s decodeUndoAction(nAction)
Declare debugUndoArrays()
Declare preserveAudCurrInfo(pAudPtr)
Declare preserveSubCurrInfo(pSubPtr)
Declare preserveCueCurrInfo(pCuePtr)
Declare purgeOldUndoGroups()
