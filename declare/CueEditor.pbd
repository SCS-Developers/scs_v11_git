Declare setSubDescrToolTip(nGadgetNo)
Declare holdDataForEditCancel()
Declare findChangesRequiringResettingGaplessInfoEtc()
Declare addAud(pCuePtr, pSubPtr, pAudPtr)
Declare addAudToSub(pCuePtr, pSubPtr, nCtrlSendIndex=-1)
Declare addCue(pCuePtr)
Declare checkOKToAddLightingCue()
Declare checkOKToAddCtrlSendCue()
Declare checkOKToAddLiveInputCue()
Declare addCueWithSubCue(pSubType.s, bRedoTree, bCallCreateCueType=#False, sFileName.s="", bSkipValidation=#False, bDragAndDrop=#False, sFileList.s="")
Declare addSub(pCuePtr, pSubPtr)
Declare addSubCue(pSubType.s, bCallCreateCueType=#False, sFileName.s="", bSkipValidation=#False)
Declare addSubToCue(pCuePtr, pSubNo, pSubType.s)
Declare autoSetNodeExpanded(pCuePtr)
Declare.s buildCueForCBO(pCuePtr, sLoopText.s="", bIncludePageNo=#False, bIncludeActivationMethod=#False)
Declare.s buildSubCueForCBO(pSubPtr, sLoopText.s="")
Declare.s buildLCCueForCBO(pSubPtr)
Declare buildCtrlSendMessage(nCtrlSendIndex = -1)
Declare calcPLTestTime(pSubPtr)
Declare callEditor(pCuePtr=-1, bCalledFromDevMapMenu=#False)
Declare changeDevLogicalName(sProdLogicalDevOld.s, sProdLogicalDevNew.s)
Declare setUnsavedChanges(bUnsavedChanges=#True)
Declare checkDataChanged(bCreateProdDatabase, bUnloadingMain=#False)
Declare clearCtrlSendItemIfNotBuilt(nCtrlSendIndex)
Declare closeEditor()
Declare copyCueOrSubToClipboard()
Declare createAudTypeP(sFileName.s)
Declare createAudTypeA(sFileName.s)
Declare createCueOrSubTypeF(sFileName.s)
Declare createCueTypeA(sFileName.s)
Declare createCueOrSubTypeI()
Declare delAudForAudPtr(pAudPtr)
Declare delCue(nNodeKey, pVerb.s)
Declare delCueOrSubCheck(pVerb.s, bSilent = #True)
Declare delSubForNodeKey(nNodeKey)
Declare delSubForSubPtr(nSubPtr)
Declare displaySubUpdatableProcessing()
Declare displaySub(pSubPtr, nItemIndex=0, nScrollPos=0)
Declare displayCue(pCuePtr, pSubPtr)
Declare displayProd()
Declare updateCtrlSendGrid(nCtrlSendIndex=-1, bForceUpdate=#False)
Declare setLoopAddBtnEnabledState()
Declare editApplyChanges()
Declare closeAndReopenSub(pSubPtr)
Declare editPlaySub(nCtrlSendIndex=-1, nStartAtTrkNo=-1)
Declare editPlayLCCue()
Declare editPlayLevelChange()
Declare editPLRestart()
Declare editPLStop(pSubPtr)
Declare editQAStop(pSubPtr, bResetPlaylist=#True)
Declare editSetDisplayButtonsF()
Declare editSetDisplayButtonsI()
Declare editSetDisplayButtonsL()
Declare editSetDisplayButtonsM()
Declare editSetDisplayButtonsP()
Declare editStopLCSub(pSubPtr)
Declare editStopMTCSubIfLinked(pSubPtr)
Declare editUpdateDisplay(bForcePositionDisplay=#False)
Declare valAud(pAudPtr, nFileNo=0)
Declare valCue(bCuePlayOnly)
Declare valSub()
Declare valCtrlSendItem(nIndex)
Declare getCuePtrForNodeKey(nNodeKey)
Declare getSubPtrForNodeKey(nNodeKey)
Declare getInitBVLevelAndPan()
Declare getLastSubForCue(pCuePtr)
Declare getRelTime(pTime, pStartAt)
Declare moveUpOrDown(nSelectedNodeCuePtr, nSelectedNodeSubPtr, nSelectedNodeKey, bMoveUp)
Declare moveLeft(nSelectedNodeCuePtr, nSelectedNodeSubPtr, nSelectedNodeKey)
Declare moveRightUp(nSelectedNodeCuePtr, nSelectedNodeSubPtr, nSelectedNodeKey)
Declare moveOneSub(pSubPtr, pReqdCuePtr, pReqdSubNo)
Declare newProd()
Declare openProd()
Declare setChildInfoForCue(pCuePtr)
Declare.s buildLiveInputDescr(pSubPtr)
Declare setResyncLinksReqd(pAudPtr)
Declare startEditor(pCuePtr, bCueListMutexLockedByCaller=#False)
Declare valAudErrMsg(pAudPtr, pField.s, pMsg.s, Index=0, nFileNo=0)
Declare valErrMsg(pGadgetNo, pMsg.s)
Declare valErrMsgCbo(pTab.s, pField, pMsg.s)
Declare valErrMsgTxt(pField, pMsg.s)
Declare valErrMustBeEntered(txtGadget, lblGadget)
Declare valErrMustBeSelected(cboGadget, lblGadget)
Declare valWarnMsg(pGadgetNo, pMsg.s)
Declare pasteFromClipboard(bRedoCueListTree)
Declare askHowManyVideoCues(nVideoImageFiles, sTitle.s)
Declare pasteCuesFromOLE(sFileList.s)
Declare promoteSubDescrIfReqd(sOldSubDescr.s, sSubField.s)
Declare propogateProdDevs(pSubType.s)
Declare redoCueListTree(nNodeKey)
Declare renumberSubNos(pCuePtr, bSkipAuds=#False)
Declare resetPlayList(pSubPtr)
Declare resyncCuePtrs(pCuePtr = -1)
Declare setEditCueSubAudPtrs(pCuePtr)
Declare buildEditCBO(hCBO, sCBOType.s)
Declare.s getLabelAndValue(nLabelGadget, nValueGadget)
Declare.s generateNextCueLabel(pCue.s, nIncrement, fIncrement.f=0.0, pCuePrefix.s="", bInCueRenumbering=#False)
Declare validateChanges()
Declare populateLCAudioDevs(*rSub.tySub, bPopulateDevsOnly=#False)
Declare newCue()
Declare newSub(pCuePtr, pSubNo, pSubType.s)
Declare applyDevChanges()
Declare markValidationOK(nGadgetNo)
Declare redisplayEditorComponent()
Declare valForLTC()
Declare valForMTC()
Declare valProd()
Declare fcEditSubType(pSubType.s)
Declare fcEditLabelsFrozen()
Declare.f getMaxBVLevelInUse()
Declare.f getMinBVLevelInUse()
Declare getMaxLoopXFadeTime(pAudPtr)
Declare bumpKeyHandler()
Declare bumpKey(nEventMenu)
Declare bumpTimeField(hTxtField, nMin, nMax, nBlankIs, nEventMenu)
Declare.s decodeDragAndDropState(nState)
Declare getIndexForVidAudLogicalDev(sLogicalDev.s)
Declare propagateProdDefDMXFadeTime()
Declare valTemplateName(lblField, txtField)
Declare moveCue(nCueToMove, nTargetCuePtr)
Declare setEditAudPtr(nNewEditAudPtr)
Declare.s buildSkipBackForwardTooltip()
Declare setDefaultCueDescrMayBeSet(pCuePtr, bSaveUndoInfo)
Declare resetSubStart(pSubPtr)
Declare checkOneCallableCueParamValid(pSubPtr, sParamId.s)
Declare checkCallableCueParamsValid(pCuePtr, pSubPtr=-1)
Declare loadHotkeyStepNos()
Declare resetStepHotkeys(sTitle.s)
