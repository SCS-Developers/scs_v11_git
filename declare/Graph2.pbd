Declare condStartGraphDrawing(*rMG.tyMG)
Declare condStopGraphDrawing(*rMG.tyMG, bDrawingStartedByMe)
Declare drawNoAudioGraphMsg(pAudPtr)
Declare drawSpecialSlice(*rMG.tyMG, nSliceType, nThisSlice, nLevelPointIndex=-1, nLoopInfoIndex=-1, nCueMarkerId=-1)
Declare drawLevelPointMarkers()
Declare drawCueMarkers(*rMG.tyMG)
Declare drawPosSlice(*rMG.tyMG)
Declare drawGraph(*rMG.tyMG, pAudPtr=-5)
Declare resizeInnerAreaOfGraph(*rMG.tyMG)
Declare resizeGraph(*rMG.tyMG)
Declare setGraphColors(*rMG.tyMG)
Declare graphInit(*rMG.tyMG)
Declare setGraphPoints(*rMG.tyMG)
Declare graphNodeChange(pAudPtr, nDecoder.l)
Declare getRepeatCount()
Declare decodeGraphVal()
Declare.s encodeGraphVal(nValue)
Declare drawScale(*rMG.tyMG)
Declare drawSideLabels()
Declare drawSideLabelsQA()
Declare setFileInfoForGraph(*rMG.tyMG, pAudPtr)
Declare loadSlicePeakAndMinArraysFromDatabase(*rMG.tyMG, nFileDataPtr, pReqdInnerWidth=-1, pAudPtr=-1)
Declare drawWholeGraphArea(bForceDrawing=#False)
Declare redrawGraphAfterMouseChange(*rMG.tyMG)
Declare newGraph(*rMG.tyMG, nAudPtr, nAudioGraphWidth=-1)
Declare prepareAndDisplayGraph(*rMG.tyMG, bForceDrawing=#False)
Declare getZoomValue()
Declare resetGraphView(*rMG.tyMG, nViewStart, nViewEnd, bForceSave=#False, bForceDoNotSave=#False)
Declare checkMousePosInGraphQF(bMouseDownEvent=#False)
Declare checkMousePosInGraphQA(bMouseDownEvent=#False)
Declare drawTip(*rMG.tyMG, nSliceType, nLevelPointIndex, nLoopInfoIndex, nCueMarkerIndex=-1)
Declare.s decodeSliceType(nSliceType)
Declare.s decodeGraphMarkerType(nGraphMarkerType)
Declare addGraphMarker(*rMG.tyMG, nGraphMarkerType, nLevelPointIndex, nLevelOrPan, nItemIndex, nX, nY, nWidth, nHeight, nMarkerTime=-1, nCueMarkerId=-1, nLoopInfoIndex=-1)
Declare listGraphMarkers(*rMG.tyMG)
Declare removeGraphMarkerForCueMarker(*rMG.tyMG, nCueMarkerId)
Declare clearGraphMarkers(*rMG.tyMG)
Declare addGraphMarkerForLevelPoint(*rMG.tyMG, nLevelPointIndex)
Declare addGraphMarkersForLevelPoints(*rMG.tyMG)
Declare addGraphMarkersForCueMarkers(*rMG.tyMG)
Declare checkMouseOnGraphMarker(*rMG.tyMG, nMouseX, nMouseY, bTrace=#False)
Declare findNearestGraphMarker(*rMG.tyMG, nMouseX, nMouseY)
Declare setMaxInnerWidthForFile(nFileDataPtr)
Declare createGraphImageIfReqd(*rMG.tyMG)
Declare levelToGraphY(fBVLevel.f, nGraphChannels)
Declare.f graphYToLevel(nGraphY, nGraphChannels)
Declare.f graphYToRelDBLevel(nGraphY)
Declare.f graphYToPan(nGraphY)
Declare drawProgressBar(*rMG.tyMG)
Declare loadSamplesArrayFromFile(*rMG.tyMG, nFileDataPtr)
Declare clearSlicePeakAndMinArrays(*rMG.tyMG)
Declare loadSlicePeakAndMinArraysFromSamplesArray(*rMG.tyMG, nFileDataPtr, pReqdInnerWidth=-1, pAudPtr=-1, bSaveToTempDatabase=#True)
Declare saveMG25SlicePeakAndMinArraysToTempDatabase(*rMG.tyMG, nFileDataPtr)
Declare saveMG34SlicePeakAndMinArraysToTempDatabase(*rMG.tyMG)
Declare cancelLoadRequestsExcept(pCaller, nFileDataPtr)
Declare cancelAllLoadRequests()
Declare calcViewStartAndEnd(*rMG.tyMG, pAudPtr)
Declare setViewStartAndEndFromVisibleGraph()
Declare loadSlicePeakAndMinArraysAndDrawGraph(*rMG.tyMG)
Declare calcNormalizeFactor(*rMG.tyMG)
